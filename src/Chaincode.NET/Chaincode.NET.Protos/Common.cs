// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chaincode.NET.Protos {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEgZjb21tb24aH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8iGwoKTGFzdENvbmZpZxINCgVpbmRleBgBIAEo",
            "BCJICghNZXRhZGF0YRINCgV2YWx1ZRgBIAEoDBItCgpzaWduYXR1cmVzGAIg",
            "AygLMhkuY29tbW9uLk1ldGFkYXRhU2lnbmF0dXJlIkAKEU1ldGFkYXRhU2ln",
            "bmF0dXJlEhgKEHNpZ25hdHVyZV9oZWFkZXIYASABKAwSEQoJc2lnbmF0dXJl",
            "GAIgASgMIjoKBkhlYWRlchIWCg5jaGFubmVsX2hlYWRlchgBIAEoDBIYChBz",
            "aWduYXR1cmVfaGVhZGVyGAIgASgMIrkBCg1DaGFubmVsSGVhZGVyEgwKBHR5",
            "cGUYASABKAUSDwoHdmVyc2lvbhgCIAEoBRItCgl0aW1lc3RhbXAYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhIKCmNoYW5uZWxfaWQYBCAB",
            "KAkSDQoFdHhfaWQYBSABKAkSDQoFZXBvY2gYBiABKAQSEQoJZXh0ZW5zaW9u",
            "GAcgASgMEhUKDXRsc19jZXJ0X2hhc2gYCCABKAwiMQoPU2lnbmF0dXJlSGVh",
            "ZGVyEg8KB2NyZWF0b3IYASABKAwSDQoFbm9uY2UYAiABKAwiNwoHUGF5bG9h",
            "ZBIeCgZoZWFkZXIYASABKAsyDi5jb21tb24uSGVhZGVyEgwKBGRhdGEYAiAB",
            "KAwiLgoIRW52ZWxvcGUSDwoHcGF5bG9hZBgBIAEoDBIRCglzaWduYXR1cmUY",
            "AiABKAwidgoFQmxvY2sSIwoGaGVhZGVyGAEgASgLMhMuY29tbW9uLkJsb2Nr",
            "SGVhZGVyEh8KBGRhdGEYAiABKAsyES5jb21tb24uQmxvY2tEYXRhEicKCG1l",
            "dGFkYXRhGAMgASgLMhUuY29tbW9uLkJsb2NrTWV0YWRhdGEiRwoLQmxvY2tI",
            "ZWFkZXISDgoGbnVtYmVyGAEgASgEEhUKDXByZXZpb3VzX2hhc2gYAiABKAwS",
            "EQoJZGF0YV9oYXNoGAMgASgMIhkKCUJsb2NrRGF0YRIMCgRkYXRhGAEgAygM",
            "IiEKDUJsb2NrTWV0YWRhdGESEAoIbWV0YWRhdGEYASADKAwiWwoUT3JkZXJl",
            "ckJsb2NrTWV0YWRhdGESJwoLbGFzdF9jb25maWcYASABKAsyEi5jb21tb24u",
            "TGFzdENvbmZpZxIaChJjb25zZW50ZXJfbWV0YWRhdGEYAiABKAwqwAEKBlN0",
            "YXR1cxILCgdVTktOT1dOEAASDAoHU1VDQ0VTUxDIARIQCgtCQURfUkVRVUVT",
            "VBCQAxIOCglGT1JCSURERU4QkwMSDgoJTk9UX0ZPVU5EEJQDEh0KGFJFUVVF",
            "U1RfRU5USVRZX1RPT19MQVJHRRCdAxIaChVJTlRFUk5BTF9TRVJWRVJfRVJS",
            "T1IQ9AMSFAoPTk9UX0lNUExFTUVOVEVEEPUDEhgKE1NFUlZJQ0VfVU5BVkFJ",
            "TEFCTEUQ9wMqygEKCkhlYWRlclR5cGUSCwoHTUVTU0FHRRAAEgoKBkNPTkZJ",
            "RxABEhEKDUNPTkZJR19VUERBVEUQAhIYChRFTkRPUlNFUl9UUkFOU0FDVElP",
            "ThADEhcKE09SREVSRVJfVFJBTlNBQ1RJT04QBBIVChFERUxJVkVSX1NFRUtf",
            "SU5GTxAFEhUKEUNIQUlOQ09ERV9QQUNLQUdFEAYSGAoUUEVFUl9BRE1JTl9P",
            "UEVSQVRJT04QCBIVChFUT0tFTl9UUkFOU0FDVElPThAJKmwKEkJsb2NrTWV0",
            "YWRhdGFJbmRleBIOCgpTSUdOQVRVUkVTEAASDwoLTEFTVF9DT05GSUcQARIX",
            "ChNUUkFOU0FDVElPTlNfRklMVEVSEAISCwoHT1JERVJFUhADEg8KC0NPTU1J",
            "VF9IQVNIEARCagokb3JnLmh5cGVybGVkZ2VyLmZhYnJpYy5wcm90b3MuY29t",
            "bW9uWitnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy9wcm90b3MvY29t",
            "bW9uqgIUQ2hhaW5jb2RlLk5FVC5Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Chaincode.NET.Protos.Status), typeof(global::Chaincode.NET.Protos.HeaderType), typeof(global::Chaincode.NET.Protos.BlockMetadataIndex), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.LastConfig), global::Chaincode.NET.Protos.LastConfig.Parser, new[]{ "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.Metadata), global::Chaincode.NET.Protos.Metadata.Parser, new[]{ "Value", "Signatures" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.MetadataSignature), global::Chaincode.NET.Protos.MetadataSignature.Parser, new[]{ "SignatureHeader", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.Header), global::Chaincode.NET.Protos.Header.Parser, new[]{ "ChannelHeader", "SignatureHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChannelHeader), global::Chaincode.NET.Protos.ChannelHeader.Parser, new[]{ "Type", "Version", "Timestamp", "ChannelId", "TxId", "Epoch", "Extension", "TlsCertHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.SignatureHeader), global::Chaincode.NET.Protos.SignatureHeader.Parser, new[]{ "Creator", "Nonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.Payload), global::Chaincode.NET.Protos.Payload.Parser, new[]{ "Header", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.Envelope), global::Chaincode.NET.Protos.Envelope.Parser, new[]{ "Payload", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.Block), global::Chaincode.NET.Protos.Block.Parser, new[]{ "Header", "Data", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.BlockHeader), global::Chaincode.NET.Protos.BlockHeader.Parser, new[]{ "Number", "PreviousHash", "DataHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.BlockData), global::Chaincode.NET.Protos.BlockData.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.BlockMetadata), global::Chaincode.NET.Protos.BlockMetadata.Parser, new[]{ "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.OrdererBlockMetadata), global::Chaincode.NET.Protos.OrdererBlockMetadata.Parser, new[]{ "LastConfig", "ConsenterMetadata" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// These status codes are intended to resemble selected HTTP status codes
  /// </summary>
  public enum Status {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("SUCCESS")] Success = 200,
    [pbr::OriginalName("BAD_REQUEST")] BadRequest = 400,
    [pbr::OriginalName("FORBIDDEN")] Forbidden = 403,
    [pbr::OriginalName("NOT_FOUND")] NotFound = 404,
    [pbr::OriginalName("REQUEST_ENTITY_TOO_LARGE")] RequestEntityTooLarge = 413,
    [pbr::OriginalName("INTERNAL_SERVER_ERROR")] InternalServerError = 500,
    [pbr::OriginalName("NOT_IMPLEMENTED")] NotImplemented = 501,
    [pbr::OriginalName("SERVICE_UNAVAILABLE")] ServiceUnavailable = 503,
  }

  /// <summary>
  /// Prevent removed tag re-use
  /// Uncomment after fabric-baseimage moves to 3.5.1
  /// reserved 7;
  /// reserved "PEER_RESOURCE_UPDATE";
  /// </summary>
  public enum HeaderType {
    /// <summary>
    /// Used for messages which are signed but opaque
    /// </summary>
    [pbr::OriginalName("MESSAGE")] Message = 0,
    /// <summary>
    /// Used for messages which express the channel config
    /// </summary>
    [pbr::OriginalName("CONFIG")] Config = 1,
    /// <summary>
    /// Used for transactions which update the channel config
    /// </summary>
    [pbr::OriginalName("CONFIG_UPDATE")] ConfigUpdate = 2,
    /// <summary>
    /// Used by the SDK to submit endorser based transactions
    /// </summary>
    [pbr::OriginalName("ENDORSER_TRANSACTION")] EndorserTransaction = 3,
    /// <summary>
    /// Used internally by the orderer for management
    /// </summary>
    [pbr::OriginalName("ORDERER_TRANSACTION")] OrdererTransaction = 4,
    /// <summary>
    /// Used as the type for Envelope messages submitted to instruct the Deliver API to seek
    /// </summary>
    [pbr::OriginalName("DELIVER_SEEK_INFO")] DeliverSeekInfo = 5,
    /// <summary>
    /// Used for packaging chaincode artifacts for install
    /// </summary>
    [pbr::OriginalName("CHAINCODE_PACKAGE")] ChaincodePackage = 6,
    /// <summary>
    /// Used for invoking an administrative operation on a peer
    /// </summary>
    [pbr::OriginalName("PEER_ADMIN_OPERATION")] PeerAdminOperation = 8,
    /// <summary>
    /// Used to denote transactions that invoke token management operations
    /// </summary>
    [pbr::OriginalName("TOKEN_TRANSACTION")] TokenTransaction = 9,
  }

  /// <summary>
  /// This enum enlists indexes of the block metadata array
  /// </summary>
  public enum BlockMetadataIndex {
    /// <summary>
    /// Block metadata array position for block signatures
    /// </summary>
    [pbr::OriginalName("SIGNATURES")] Signatures = 0,
    /// <summary>
    /// Block metadata array position to store last configuration block sequence number
    /// </summary>
    [pbr::OriginalName("LAST_CONFIG")] LastConfig = 1,
    /// <summary>
    /// Block metadata array position to store serialized bit array filter of invalid transactions
    /// </summary>
    [pbr::OriginalName("TRANSACTIONS_FILTER")] TransactionsFilter = 2,
    /// <summary>
    /// Block metadata array position to store operational metadata for orderers e.g. For Kafka,
    ///this is where we store the last offset written to the local ledger 
    /// </summary>
    [pbr::OriginalName("ORDERER")] Orderer = 3,
    /// <summary>
    /// Block metadata array position to store the hash of TRANSACTIONS_FILTER, State Updates,
    ///and the COMMIT_HASH of the previous block 
    /// </summary>
    [pbr::OriginalName("COMMIT_HASH")] CommitHash = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// LastConfig is the encoded value for the Metadata message which is encoded in the LAST_CONFIGURATION block metadata index
  /// </summary>
  public sealed partial class LastConfig : pb::IMessage<LastConfig> {
    private static readonly pb::MessageParser<LastConfig> _parser = new pb::MessageParser<LastConfig>(() => new LastConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastConfig(LastConfig other) : this() {
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastConfig Clone() {
      return new LastConfig(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private ulong index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0UL) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastConfig other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0UL) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata is a common structure to be used to encode block metadata
  /// </summary>
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      value_ = other.value_;
      signatures_ = other.signatures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signatures" field.</summary>
    public const int SignaturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Chaincode.NET.Protos.MetadataSignature> _repeated_signatures_codec
        = pb::FieldCodec.ForMessage(18, global::Chaincode.NET.Protos.MetadataSignature.Parser);
    private readonly pbc::RepeatedField<global::Chaincode.NET.Protos.MetadataSignature> signatures_ = new pbc::RepeatedField<global::Chaincode.NET.Protos.MetadataSignature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chaincode.NET.Protos.MetadataSignature> Signatures {
      get { return signatures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if(!signatures_.Equals(other.signatures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= signatures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      signatures_.WriteTo(output, _repeated_signatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      size += signatures_.CalculateSize(_repeated_signatures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      signatures_.Add(other.signatures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
          case 18: {
            signatures_.AddEntriesFrom(input, _repeated_signatures_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MetadataSignature : pb::IMessage<MetadataSignature> {
    private static readonly pb::MessageParser<MetadataSignature> _parser = new pb::MessageParser<MetadataSignature>(() => new MetadataSignature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetadataSignature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataSignature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataSignature(MetadataSignature other) : this() {
      signatureHeader_ = other.signatureHeader_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataSignature Clone() {
      return new MetadataSignature(this);
    }

    /// <summary>Field number for the "signature_header" field.</summary>
    public const int SignatureHeaderFieldNumber = 1;
    private pb::ByteString signatureHeader_ = pb::ByteString.Empty;
    /// <summary>
    /// An encoded SignatureHeader
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SignatureHeader {
      get { return signatureHeader_; }
      set {
        signatureHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    /// <summary>
    /// The signature over the concatenation of the Metadata value bytes, signatureHeader, and block header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetadataSignature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetadataSignature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignatureHeader != other.SignatureHeader) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignatureHeader.Length != 0) hash ^= SignatureHeader.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignatureHeader.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SignatureHeader);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignatureHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignatureHeader);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetadataSignature other) {
      if (other == null) {
        return;
      }
      if (other.SignatureHeader.Length != 0) {
        SignatureHeader = other.SignatureHeader;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignatureHeader = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Header : pb::IMessage<Header> {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      channelHeader_ = other.channelHeader_;
      signatureHeader_ = other.signatureHeader_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "channel_header" field.</summary>
    public const int ChannelHeaderFieldNumber = 1;
    private pb::ByteString channelHeader_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ChannelHeader {
      get { return channelHeader_; }
      set {
        channelHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature_header" field.</summary>
    public const int SignatureHeaderFieldNumber = 2;
    private pb::ByteString signatureHeader_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SignatureHeader {
      get { return signatureHeader_; }
      set {
        signatureHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelHeader != other.ChannelHeader) return false;
      if (SignatureHeader != other.SignatureHeader) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelHeader.Length != 0) hash ^= ChannelHeader.GetHashCode();
      if (SignatureHeader.Length != 0) hash ^= SignatureHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChannelHeader.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ChannelHeader);
      }
      if (SignatureHeader.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SignatureHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChannelHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ChannelHeader);
      }
      if (SignatureHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignatureHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.ChannelHeader.Length != 0) {
        ChannelHeader = other.ChannelHeader;
      }
      if (other.SignatureHeader.Length != 0) {
        SignatureHeader = other.SignatureHeader;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChannelHeader = input.ReadBytes();
            break;
          }
          case 18: {
            SignatureHeader = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Header is a generic replay prevention and identity message to include in a signed payload
  /// </summary>
  public sealed partial class ChannelHeader : pb::IMessage<ChannelHeader> {
    private static readonly pb::MessageParser<ChannelHeader> _parser = new pb::MessageParser<ChannelHeader>(() => new ChannelHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelHeader(ChannelHeader other) : this() {
      type_ = other.type_;
      version_ = other.version_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      channelId_ = other.channelId_;
      txId_ = other.txId_;
      epoch_ = other.epoch_;
      extension_ = other.extension_;
      tlsCertHash_ = other.tlsCertHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelHeader Clone() {
      return new ChannelHeader(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    /// Header types 0-10000 are reserved and defined by HeaderType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    /// <summary>
    /// Version indicates message protocol version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp is the local time when the message was created
    /// by the sender
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 4;
    private string channelId_ = "";
    /// <summary>
    /// Identifier of the channel this message is bound for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_id" field.</summary>
    public const int TxIdFieldNumber = 5;
    private string txId_ = "";
    /// <summary>
    /// An unique identifier that is used end-to-end.
    ///  -  set by higher layers such as end user or SDK
    ///  -  passed to the endorser (which will check for uniqueness)
    ///  -  as the header is passed along unchanged, it will be
    ///     be retrieved by the committer (uniqueness check here as well)
    ///  -  to be stored in the ledger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxId {
      get { return txId_; }
      set {
        txId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 6;
    private ulong epoch_;
    /// <summary>
    /// The epoch in which this header was generated, where epoch is defined based on block height
    /// Epoch in which the response has been generated. This field identifies a
    /// logical window of time. A proposal response is accepted by a peer only if
    /// two conditions hold:
    /// 1. the epoch specified in the message is the current epoch
    /// 2. this message has been only seen once during this epoch (i.e. it hasn't
    ///    been replayed)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 7;
    private pb::ByteString extension_ = pb::ByteString.Empty;
    /// <summary>
    /// Extension that may be attached based on the header type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Extension {
      get { return extension_; }
      set {
        extension_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tls_cert_hash" field.</summary>
    public const int TlsCertHashFieldNumber = 8;
    private pb::ByteString tlsCertHash_ = pb::ByteString.Empty;
    /// <summary>
    /// If mutual TLS is employed, this represents
    /// the hash of the client's TLS certificate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TlsCertHash {
      get { return tlsCertHash_; }
      set {
        tlsCertHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Version != other.Version) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (ChannelId != other.ChannelId) return false;
      if (TxId != other.TxId) return false;
      if (Epoch != other.Epoch) return false;
      if (Extension != other.Extension) return false;
      if (TlsCertHash != other.TlsCertHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      if (TxId.Length != 0) hash ^= TxId.GetHashCode();
      if (Epoch != 0UL) hash ^= Epoch.GetHashCode();
      if (Extension.Length != 0) hash ^= Extension.GetHashCode();
      if (TlsCertHash.Length != 0) hash ^= TlsCertHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChannelId);
      }
      if (TxId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TxId);
      }
      if (Epoch != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Epoch);
      }
      if (Extension.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Extension);
      }
      if (TlsCertHash.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(TlsCertHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      if (TxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxId);
      }
      if (Epoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Epoch);
      }
      if (Extension.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Extension);
      }
      if (TlsCertHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TlsCertHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelHeader other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.TxId.Length != 0) {
        TxId = other.TxId;
      }
      if (other.Epoch != 0UL) {
        Epoch = other.Epoch;
      }
      if (other.Extension.Length != 0) {
        Extension = other.Extension;
      }
      if (other.TlsCertHash.Length != 0) {
        TlsCertHash = other.TlsCertHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            ChannelId = input.ReadString();
            break;
          }
          case 42: {
            TxId = input.ReadString();
            break;
          }
          case 48: {
            Epoch = input.ReadUInt64();
            break;
          }
          case 58: {
            Extension = input.ReadBytes();
            break;
          }
          case 66: {
            TlsCertHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignatureHeader : pb::IMessage<SignatureHeader> {
    private static readonly pb::MessageParser<SignatureHeader> _parser = new pb::MessageParser<SignatureHeader>(() => new SignatureHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatureHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureHeader(SignatureHeader other) : this() {
      creator_ = other.creator_;
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureHeader Clone() {
      return new SignatureHeader(this);
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 1;
    private pb::ByteString creator_ = pb::ByteString.Empty;
    /// <summary>
    /// Creator of the message, a marshaled msp.SerializedIdentity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 2;
    private pb::ByteString nonce_ = pb::ByteString.Empty;
    /// <summary>
    /// Arbitrary number that may only be used once. Can be used to detect replay attacks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatureHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatureHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Creator != other.Creator) return false;
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Creator.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Creator);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Creator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Creator);
      }
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatureHeader other) {
      if (other == null) {
        return;
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Creator = input.ReadBytes();
            break;
          }
          case 18: {
            Nonce = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Payload is the message contents (and header to allow for signing)
  /// </summary>
  public sealed partial class Payload : pb::IMessage<Payload> {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload(Payload other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Chaincode.NET.Protos.Header header_;
    /// <summary>
    /// Header is included to provide identity and prevent replay
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// Data, the encoding of which is defined by the type in the header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Chaincode.NET.Protos.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Chaincode.NET.Protos.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Envelope wraps a Payload with a signature so that the message may be authenticated
  /// </summary>
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope(Envelope other) : this() {
      payload_ = other.payload_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// A marshaled Payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    /// <summary>
    /// A signature by the creator specified in the Payload header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// This is finalized block structure to be shared among the orderer and peer
  /// Note that the BlockHeader chains to the previous BlockHeader, and the BlockData hash is embedded
  /// in the BlockHeader.  This makes it natural and obvious that the Data is included in the hash, but
  /// the Metadata is not.
  /// </summary>
  public sealed partial class Block : pb::IMessage<Block> {
    private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Block> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block(Block other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block Clone() {
      return new Block(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Chaincode.NET.Protos.BlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.BlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Chaincode.NET.Protos.BlockData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.BlockData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private global::Chaincode.NET.Protos.BlockMetadata metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.BlockMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Block);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Block other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (metadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Block other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Chaincode.NET.Protos.BlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Chaincode.NET.Protos.BlockData();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Chaincode.NET.Protos.BlockMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Chaincode.NET.Protos.BlockHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::Chaincode.NET.Protos.BlockData();
            }
            input.ReadMessage(Data);
            break;
          }
          case 26: {
            if (metadata_ == null) {
              Metadata = new global::Chaincode.NET.Protos.BlockMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// BlockHeader is the element of the block which forms the block chain
  /// The block header is hashed using the configured chain hashing algorithm
  /// over the ASN.1 encoding of the BlockHeader
  /// </summary>
  public sealed partial class BlockHeader : pb::IMessage<BlockHeader> {
    private static readonly pb::MessageParser<BlockHeader> _parser = new pb::MessageParser<BlockHeader>(() => new BlockHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader(BlockHeader other) : this() {
      number_ = other.number_;
      previousHash_ = other.previousHash_;
      dataHash_ = other.dataHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader Clone() {
      return new BlockHeader(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private ulong number_;
    /// <summary>
    /// The position in the blockchain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "previous_hash" field.</summary>
    public const int PreviousHashFieldNumber = 2;
    private pb::ByteString previousHash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the previous block header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PreviousHash {
      get { return previousHash_; }
      set {
        previousHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_hash" field.</summary>
    public const int DataHashFieldNumber = 3;
    private pb::ByteString dataHash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the BlockData, by MerkleTree
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataHash {
      get { return dataHash_; }
      set {
        dataHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (PreviousHash != other.PreviousHash) return false;
      if (DataHash != other.DataHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0UL) hash ^= Number.GetHashCode();
      if (PreviousHash.Length != 0) hash ^= PreviousHash.GetHashCode();
      if (DataHash.Length != 0) hash ^= DataHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Number != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Number);
      }
      if (PreviousHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PreviousHash);
      }
      if (DataHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DataHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Number);
      }
      if (PreviousHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PreviousHash);
      }
      if (DataHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeader other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0UL) {
        Number = other.Number;
      }
      if (other.PreviousHash.Length != 0) {
        PreviousHash = other.PreviousHash;
      }
      if (other.DataHash.Length != 0) {
        DataHash = other.DataHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadUInt64();
            break;
          }
          case 18: {
            PreviousHash = input.ReadBytes();
            break;
          }
          case 26: {
            DataHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockData : pb::IMessage<BlockData> {
    private static readonly pb::MessageParser<BlockData> _parser = new pb::MessageParser<BlockData>(() => new BlockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockData(BlockData other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockData Clone() {
      return new BlockData(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_data_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> data_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockData other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockMetadata : pb::IMessage<BlockMetadata> {
    private static readonly pb::MessageParser<BlockMetadata> _parser = new pb::MessageParser<BlockMetadata>(() => new BlockMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMetadata(BlockMetadata other) : this() {
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMetadata Clone() {
      return new BlockMetadata(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_metadata_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> metadata_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metadata_.Equals(other.metadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockMetadata other) {
      if (other == null) {
        return;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// OrdererBlockMetadata defines metadata that is set by the ordering service.
  /// </summary>
  public sealed partial class OrdererBlockMetadata : pb::IMessage<OrdererBlockMetadata> {
    private static readonly pb::MessageParser<OrdererBlockMetadata> _parser = new pb::MessageParser<OrdererBlockMetadata>(() => new OrdererBlockMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrdererBlockMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrdererBlockMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrdererBlockMetadata(OrdererBlockMetadata other) : this() {
      lastConfig_ = other.lastConfig_ != null ? other.lastConfig_.Clone() : null;
      consenterMetadata_ = other.consenterMetadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrdererBlockMetadata Clone() {
      return new OrdererBlockMetadata(this);
    }

    /// <summary>Field number for the "last_config" field.</summary>
    public const int LastConfigFieldNumber = 1;
    private global::Chaincode.NET.Protos.LastConfig lastConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.LastConfig LastConfig {
      get { return lastConfig_; }
      set {
        lastConfig_ = value;
      }
    }

    /// <summary>Field number for the "consenter_metadata" field.</summary>
    public const int ConsenterMetadataFieldNumber = 2;
    private pb::ByteString consenterMetadata_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConsenterMetadata {
      get { return consenterMetadata_; }
      set {
        consenterMetadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrdererBlockMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrdererBlockMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastConfig, other.LastConfig)) return false;
      if (ConsenterMetadata != other.ConsenterMetadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastConfig_ != null) hash ^= LastConfig.GetHashCode();
      if (ConsenterMetadata.Length != 0) hash ^= ConsenterMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lastConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastConfig);
      }
      if (ConsenterMetadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ConsenterMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastConfig);
      }
      if (ConsenterMetadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConsenterMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrdererBlockMetadata other) {
      if (other == null) {
        return;
      }
      if (other.lastConfig_ != null) {
        if (lastConfig_ == null) {
          LastConfig = new global::Chaincode.NET.Protos.LastConfig();
        }
        LastConfig.MergeFrom(other.LastConfig);
      }
      if (other.ConsenterMetadata.Length != 0) {
        ConsenterMetadata = other.ConsenterMetadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastConfig_ == null) {
              LastConfig = new global::Chaincode.NET.Protos.LastConfig();
            }
            input.ReadMessage(LastConfig);
            break;
          }
          case 18: {
            ConsenterMetadata = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
