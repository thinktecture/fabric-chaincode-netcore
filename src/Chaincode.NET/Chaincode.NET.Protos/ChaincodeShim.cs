// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: peer/chaincode_shim.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chaincode.NET.Protos {

  /// <summary>Holder for reflection information generated from peer/chaincode_shim.proto</summary>
  public static partial class ChaincodeShimReflection {

    #region Descriptor
    /// <summary>File descriptor for peer/chaincode_shim.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChaincodeShimReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlwZWVyL2NoYWluY29kZV9zaGltLnByb3RvEgZwcm90b3MaGnBlZXIvY2hh",
            "aW5jb2RlX2V2ZW50LnByb3RvGhNwZWVyL3Byb3Bvc2FsLnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIpEFChBDaGFpbmNvZGVNZXNz",
            "YWdlEisKBHR5cGUYASABKA4yHS5wcm90b3MuQ2hhaW5jb2RlTWVzc2FnZS5U",
            "eXBlEi0KCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASDwoHcGF5bG9hZBgDIAEoDBIMCgR0eGlkGAQgASgJEigKCHByb3Bv",
            "c2FsGAUgASgLMhYucHJvdG9zLlNpZ25lZFByb3Bvc2FsEi8KD2NoYWluY29k",
            "ZV9ldmVudBgGIAEoCzIWLnByb3Rvcy5DaGFpbmNvZGVFdmVudBISCgpjaGFu",
            "bmVsX2lkGAcgASgJIpIDCgRUeXBlEg0KCVVOREVGSU5FRBAAEgwKCFJFR0lT",
            "VEVSEAESDgoKUkVHSVNURVJFRBACEggKBElOSVQQAxIJCgVSRUFEWRAEEg8K",
            "C1RSQU5TQUNUSU9OEAUSDQoJQ09NUExFVEVEEAYSCQoFRVJST1IQBxINCglH",
            "RVRfU1RBVEUQCBINCglQVVRfU1RBVEUQCRINCglERUxfU1RBVEUQChIUChBJ",
            "TlZPS0VfQ0hBSU5DT0RFEAsSDAoIUkVTUE9OU0UQDRIWChJHRVRfU1RBVEVf",
            "QllfUkFOR0UQDhIUChBHRVRfUVVFUllfUkVTVUxUEA8SFAoQUVVFUllfU1RB",
            "VEVfTkVYVBAQEhUKEVFVRVJZX1NUQVRFX0NMT1NFEBESDQoJS0VFUEFMSVZF",
            "EBISFwoTR0VUX0hJU1RPUllfRk9SX0tFWRATEhYKEkdFVF9TVEFURV9NRVRB",
            "REFUQRAUEhYKElBVVF9TVEFURV9NRVRBREFUQRAVEhkKFUdFVF9QUklWQVRF",
            "X0RBVEFfSEFTSBAWIisKCEdldFN0YXRlEgsKA2tleRgBIAEoCRISCgpjb2xs",
            "ZWN0aW9uGAIgASgJIjMKEEdldFN0YXRlTWV0YWRhdGESCwoDa2V5GAEgASgJ",
            "EhIKCmNvbGxlY3Rpb24YAiABKAkiOgoIUHV0U3RhdGUSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgMEhIKCmNvbGxlY3Rpb24YAyABKAkiXAoQUHV0U3Rh",
            "dGVNZXRhZGF0YRILCgNrZXkYASABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRIn",
            "CghtZXRhZGF0YRgEIAEoCzIVLnByb3Rvcy5TdGF0ZU1ldGFkYXRhIisKCERl",
            "bFN0YXRlEgsKA2tleRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIlkKD0dl",
            "dFN0YXRlQnlSYW5nZRIQCghzdGFydEtleRgBIAEoCRIOCgZlbmRLZXkYAiAB",
            "KAkSEgoKY29sbGVjdGlvbhgDIAEoCRIQCghtZXRhZGF0YRgEIAEoDCJFCg5H",
            "ZXRRdWVyeVJlc3VsdBINCgVxdWVyeRgBIAEoCRISCgpjb2xsZWN0aW9uGAIg",
            "ASgJEhAKCG1ldGFkYXRhGAMgASgMIjMKDVF1ZXJ5TWV0YWRhdGESEAoIcGFn",
            "ZVNpemUYASABKAUSEAoIYm9va21hcmsYAiABKAkiHwoQR2V0SGlzdG9yeUZv",
            "cktleRILCgNrZXkYASABKAkiHAoOUXVlcnlTdGF0ZU5leHQSCgoCaWQYASAB",
            "KAkiHQoPUXVlcnlTdGF0ZUNsb3NlEgoKAmlkGAEgASgJIicKEFF1ZXJ5UmVz",
            "dWx0Qnl0ZXMSEwoLcmVzdWx0Qnl0ZXMYASABKAwiagoNUXVlcnlSZXNwb25z",
            "ZRIpCgdyZXN1bHRzGAEgAygLMhgucHJvdG9zLlF1ZXJ5UmVzdWx0Qnl0ZXMS",
            "EAoIaGFzX21vcmUYAiABKAgSCgoCaWQYAyABKAkSEAoIbWV0YWRhdGEYBCAB",
            "KAwiSAoVUXVlcnlSZXNwb25zZU1ldGFkYXRhEh0KFWZldGNoZWRfcmVjb3Jk",
            "c19jb3VudBgBIAEoBRIQCghib29rbWFyaxgCIAEoCSIvCg1TdGF0ZU1ldGFk",
            "YXRhEg8KB21ldGFrZXkYASABKAkSDQoFdmFsdWUYAiABKAwiPQoTU3RhdGVN",
            "ZXRhZGF0YVJlc3VsdBImCgdlbnRyaWVzGAEgAygLMhUucHJvdG9zLlN0YXRl",
            "TWV0YWRhdGEyWAoQQ2hhaW5jb2RlU3VwcG9ydBJECghSZWdpc3RlchIYLnBy",
            "b3Rvcy5DaGFpbmNvZGVNZXNzYWdlGhgucHJvdG9zLkNoYWluY29kZU1lc3Nh",
            "Z2UiACgBMAFCZgoib3JnLmh5cGVybGVkZ2VyLmZhYnJpYy5wcm90b3MucGVl",
            "clopZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMvcHJvdG9zL3BlZXKq",
            "AhRDaGFpbmNvZGUuTkVULlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Chaincode.NET.Protos.ChaincodeEventReflection.Descriptor, global::Chaincode.NET.Protos.ProposalReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeMessage), global::Chaincode.NET.Protos.ChaincodeMessage.Parser, new[]{ "Type", "Timestamp", "Payload", "Txid", "Proposal", "ChaincodeEvent", "ChannelId" }, null, new[]{ typeof(global::Chaincode.NET.Protos.ChaincodeMessage.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.GetState), global::Chaincode.NET.Protos.GetState.Parser, new[]{ "Key", "Collection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.GetStateMetadata), global::Chaincode.NET.Protos.GetStateMetadata.Parser, new[]{ "Key", "Collection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.PutState), global::Chaincode.NET.Protos.PutState.Parser, new[]{ "Key", "Value", "Collection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.PutStateMetadata), global::Chaincode.NET.Protos.PutStateMetadata.Parser, new[]{ "Key", "Collection", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.DelState), global::Chaincode.NET.Protos.DelState.Parser, new[]{ "Key", "Collection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.GetStateByRange), global::Chaincode.NET.Protos.GetStateByRange.Parser, new[]{ "StartKey", "EndKey", "Collection", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.GetQueryResult), global::Chaincode.NET.Protos.GetQueryResult.Parser, new[]{ "Query", "Collection", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryMetadata), global::Chaincode.NET.Protos.QueryMetadata.Parser, new[]{ "PageSize", "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.GetHistoryForKey), global::Chaincode.NET.Protos.GetHistoryForKey.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryStateNext), global::Chaincode.NET.Protos.QueryStateNext.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryStateClose), global::Chaincode.NET.Protos.QueryStateClose.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryResultBytes), global::Chaincode.NET.Protos.QueryResultBytes.Parser, new[]{ "ResultBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryResponse), global::Chaincode.NET.Protos.QueryResponse.Parser, new[]{ "Results", "HasMore", "Id", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.QueryResponseMetadata), global::Chaincode.NET.Protos.QueryResponseMetadata.Parser, new[]{ "FetchedRecordsCount", "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.StateMetadata), global::Chaincode.NET.Protos.StateMetadata.Parser, new[]{ "Metakey", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.StateMetadataResult), global::Chaincode.NET.Protos.StateMetadataResult.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChaincodeMessage : pb::IMessage<ChaincodeMessage> {
    private static readonly pb::MessageParser<ChaincodeMessage> _parser = new pb::MessageParser<ChaincodeMessage>(() => new ChaincodeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeMessage(ChaincodeMessage other) : this() {
      type_ = other.type_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      payload_ = other.payload_;
      txid_ = other.txid_;
      proposal_ = other.proposal_ != null ? other.proposal_.Clone() : null;
      chaincodeEvent_ = other.chaincodeEvent_ != null ? other.chaincodeEvent_.Clone() : null;
      channelId_ = other.channelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeMessage Clone() {
      return new ChaincodeMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chaincode.NET.Protos.ChaincodeMessage.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeMessage.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 4;
    private string txid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proposal" field.</summary>
    public const int ProposalFieldNumber = 5;
    private global::Chaincode.NET.Protos.SignedProposal proposal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.SignedProposal Proposal {
      get { return proposal_; }
      set {
        proposal_ = value;
      }
    }

    /// <summary>Field number for the "chaincode_event" field.</summary>
    public const int ChaincodeEventFieldNumber = 6;
    private global::Chaincode.NET.Protos.ChaincodeEvent chaincodeEvent_;
    /// <summary>
    ///event emitted by chaincode. Used only with Init or Invoke.
    /// This event is then stored (currently)
    ///with Block.NonHashData.TransactionResult
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeEvent ChaincodeEvent {
      get { return chaincodeEvent_; }
      set {
        chaincodeEvent_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 7;
    private string channelId_ = "";
    /// <summary>
    ///channel id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Payload != other.Payload) return false;
      if (Txid != other.Txid) return false;
      if (!object.Equals(Proposal, other.Proposal)) return false;
      if (!object.Equals(ChaincodeEvent, other.ChaincodeEvent)) return false;
      if (ChannelId != other.ChannelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      if (proposal_ != null) hash ^= Proposal.GetHashCode();
      if (chaincodeEvent_ != null) hash ^= ChaincodeEvent.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Txid);
      }
      if (proposal_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Proposal);
      }
      if (chaincodeEvent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ChaincodeEvent);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Txid);
      }
      if (proposal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposal);
      }
      if (chaincodeEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChaincodeEvent);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      if (other.proposal_ != null) {
        if (proposal_ == null) {
          Proposal = new global::Chaincode.NET.Protos.SignedProposal();
        }
        Proposal.MergeFrom(other.Proposal);
      }
      if (other.chaincodeEvent_ != null) {
        if (chaincodeEvent_ == null) {
          ChaincodeEvent = new global::Chaincode.NET.Protos.ChaincodeEvent();
        }
        ChaincodeEvent.MergeFrom(other.ChaincodeEvent);
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Chaincode.NET.Protos.ChaincodeMessage.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
          case 34: {
            Txid = input.ReadString();
            break;
          }
          case 42: {
            if (proposal_ == null) {
              Proposal = new global::Chaincode.NET.Protos.SignedProposal();
            }
            input.ReadMessage(Proposal);
            break;
          }
          case 50: {
            if (chaincodeEvent_ == null) {
              ChaincodeEvent = new global::Chaincode.NET.Protos.ChaincodeEvent();
            }
            input.ReadMessage(ChaincodeEvent);
            break;
          }
          case 58: {
            ChannelId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChaincodeMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("REGISTER")] Register = 1,
        [pbr::OriginalName("REGISTERED")] Registered = 2,
        [pbr::OriginalName("INIT")] Init = 3,
        [pbr::OriginalName("READY")] Ready = 4,
        [pbr::OriginalName("TRANSACTION")] Transaction = 5,
        [pbr::OriginalName("COMPLETED")] Completed = 6,
        [pbr::OriginalName("ERROR")] Error = 7,
        [pbr::OriginalName("GET_STATE")] GetState = 8,
        [pbr::OriginalName("PUT_STATE")] PutState = 9,
        [pbr::OriginalName("DEL_STATE")] DelState = 10,
        [pbr::OriginalName("INVOKE_CHAINCODE")] InvokeChaincode = 11,
        [pbr::OriginalName("RESPONSE")] Response = 13,
        [pbr::OriginalName("GET_STATE_BY_RANGE")] GetStateByRange = 14,
        [pbr::OriginalName("GET_QUERY_RESULT")] GetQueryResult = 15,
        [pbr::OriginalName("QUERY_STATE_NEXT")] QueryStateNext = 16,
        [pbr::OriginalName("QUERY_STATE_CLOSE")] QueryStateClose = 17,
        [pbr::OriginalName("KEEPALIVE")] Keepalive = 18,
        [pbr::OriginalName("GET_HISTORY_FOR_KEY")] GetHistoryForKey = 19,
        [pbr::OriginalName("GET_STATE_METADATA")] GetStateMetadata = 20,
        [pbr::OriginalName("PUT_STATE_METADATA")] PutStateMetadata = 21,
        [pbr::OriginalName("GET_PRIVATE_DATA_HASH")] GetPrivateDataHash = 22,
      }

    }
    #endregion

  }

  /// <summary>
  /// GetState is the payload of a ChaincodeMessage. It contains a key which
  /// is to be fetched from the ledger. If the collection is specified, the key
  /// would be fetched from the collection (i.e., private state)
  /// </summary>
  public sealed partial class GetState : pb::IMessage<GetState> {
    private static readonly pb::MessageParser<GetState> _parser = new pb::MessageParser<GetState>(() => new GetState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetState(GetState other) : this() {
      key_ = other.key_;
      collection_ = other.collection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetState Clone() {
      return new GetState(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 2;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Collection != other.Collection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Collection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetState other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Collection = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStateMetadata : pb::IMessage<GetStateMetadata> {
    private static readonly pb::MessageParser<GetStateMetadata> _parser = new pb::MessageParser<GetStateMetadata>(() => new GetStateMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStateMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateMetadata(GetStateMetadata other) : this() {
      key_ = other.key_;
      collection_ = other.collection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateMetadata Clone() {
      return new GetStateMetadata(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 2;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStateMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStateMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Collection != other.Collection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Collection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStateMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Collection = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PutState is the payload of a ChaincodeMessage. It contains a key and value
  /// which needs to be written to the transaction's write set. If the collection is
  /// specified, the key and value would be written to the transaction's private
  /// write set.
  /// </summary>
  public sealed partial class PutState : pb::IMessage<PutState> {
    private static readonly pb::MessageParser<PutState> _parser = new pb::MessageParser<PutState>(() => new PutState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutState(PutState other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      collection_ = other.collection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutState Clone() {
      return new PutState(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (Collection != other.Collection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutState other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutStateMetadata : pb::IMessage<PutStateMetadata> {
    private static readonly pb::MessageParser<PutStateMetadata> _parser = new pb::MessageParser<PutStateMetadata>(() => new PutStateMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutStateMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutStateMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutStateMetadata(PutStateMetadata other) : this() {
      key_ = other.key_;
      collection_ = other.collection_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutStateMetadata Clone() {
      return new PutStateMetadata(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private global::Chaincode.NET.Protos.StateMetadata metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.StateMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutStateMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutStateMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Collection != other.Collection) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutStateMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Chaincode.NET.Protos.StateMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Chaincode.NET.Protos.StateMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DelState is the payload of a ChaincodeMessage. It contains a key which
  /// needs to be recorded in the transaction's write set as a delete operation.
  /// If the collection is specified, the key needs to be recorded in the
  /// transaction's private write set as a delete operation.
  /// </summary>
  public sealed partial class DelState : pb::IMessage<DelState> {
    private static readonly pb::MessageParser<DelState> _parser = new pb::MessageParser<DelState>(() => new DelState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelState(DelState other) : this() {
      key_ = other.key_;
      collection_ = other.collection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelState Clone() {
      return new DelState(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 2;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Collection != other.Collection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Collection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelState other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Collection = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetStateByRange is the payload of a ChaincodeMessage. It contains a start key and
  /// a end key required to execute range query. If the collection is specified,
  /// the range query needs to be executed on the private data. The metadata hold
  /// the byte representation of QueryMetadata.
  /// </summary>
  public sealed partial class GetStateByRange : pb::IMessage<GetStateByRange> {
    private static readonly pb::MessageParser<GetStateByRange> _parser = new pb::MessageParser<GetStateByRange>(() => new GetStateByRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStateByRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateByRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateByRange(GetStateByRange other) : this() {
      startKey_ = other.startKey_;
      endKey_ = other.endKey_;
      collection_ = other.collection_;
      metadata_ = other.metadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStateByRange Clone() {
      return new GetStateByRange(this);
    }

    /// <summary>Field number for the "startKey" field.</summary>
    public const int StartKeyFieldNumber = 1;
    private string startKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartKey {
      get { return startKey_; }
      set {
        startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endKey" field.</summary>
    public const int EndKeyFieldNumber = 2;
    private string endKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndKey {
      get { return endKey_; }
      set {
        endKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private pb::ByteString metadata_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStateByRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStateByRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartKey != other.StartKey) return false;
      if (EndKey != other.EndKey) return false;
      if (Collection != other.Collection) return false;
      if (Metadata != other.Metadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartKey.Length != 0) hash ^= StartKey.GetHashCode();
      if (EndKey.Length != 0) hash ^= EndKey.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartKey);
      }
      if (EndKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndKey);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartKey);
      }
      if (EndKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndKey);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStateByRange other) {
      if (other == null) {
        return;
      }
      if (other.StartKey.Length != 0) {
        StartKey = other.StartKey;
      }
      if (other.EndKey.Length != 0) {
        EndKey = other.EndKey;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartKey = input.ReadString();
            break;
          }
          case 18: {
            EndKey = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Metadata = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetQueryResult is the payload of a ChaincodeMessage. It contains a query
  /// string in the form that is supported by the underlying state database.
  /// If the collection is specified, the query needs to be executed on the
  /// private data.  The metadata hold the byte representation of QueryMetadata.
  /// </summary>
  public sealed partial class GetQueryResult : pb::IMessage<GetQueryResult> {
    private static readonly pb::MessageParser<GetQueryResult> _parser = new pb::MessageParser<GetQueryResult>(() => new GetQueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueryResult(GetQueryResult other) : this() {
      query_ = other.query_;
      collection_ = other.collection_;
      metadata_ = other.metadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueryResult Clone() {
      return new GetQueryResult(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 2;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private pb::ByteString metadata_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      if (Collection != other.Collection) return false;
      if (Metadata != other.Metadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Collection);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQueryResult other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            Collection = input.ReadString();
            break;
          }
          case 26: {
            Metadata = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryMetadata is the metadata of a GetStateByRange and GetQueryResult.
  /// It contains a pageSize which denotes the number of records to be fetched
  /// and a bookmark.
  /// </summary>
  public sealed partial class QueryMetadata : pb::IMessage<QueryMetadata> {
    private static readonly pb::MessageParser<QueryMetadata> _parser = new pb::MessageParser<QueryMetadata>(() => new QueryMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMetadata(QueryMetadata other) : this() {
      pageSize_ = other.pageSize_;
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMetadata Clone() {
      return new QueryMetadata(this);
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private string bookmark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bookmark {
      get { return bookmark_; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageSize != other.PageSize) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (Bookmark.Length != 0) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (Bookmark.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (Bookmark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryMetadata other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.Bookmark.Length != 0) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            Bookmark = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetHistoryForKey is the payload of a ChaincodeMessage. It contains a key
  /// for which the historical values need to be retrieved.
  /// </summary>
  public sealed partial class GetHistoryForKey : pb::IMessage<GetHistoryForKey> {
    private static readonly pb::MessageParser<GetHistoryForKey> _parser = new pb::MessageParser<GetHistoryForKey>(() => new GetHistoryForKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHistoryForKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryForKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryForKey(GetHistoryForKey other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryForKey Clone() {
      return new GetHistoryForKey(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHistoryForKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHistoryForKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHistoryForKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryStateNext : pb::IMessage<QueryStateNext> {
    private static readonly pb::MessageParser<QueryStateNext> _parser = new pb::MessageParser<QueryStateNext>(() => new QueryStateNext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryStateNext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateNext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateNext(QueryStateNext other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateNext Clone() {
      return new QueryStateNext(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryStateNext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryStateNext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryStateNext other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryStateClose : pb::IMessage<QueryStateClose> {
    private static readonly pb::MessageParser<QueryStateClose> _parser = new pb::MessageParser<QueryStateClose>(() => new QueryStateClose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryStateClose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateClose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateClose(QueryStateClose other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryStateClose Clone() {
      return new QueryStateClose(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryStateClose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryStateClose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryStateClose other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryResultBytes hold the byte representation of a record returned by the peer.
  /// </summary>
  public sealed partial class QueryResultBytes : pb::IMessage<QueryResultBytes> {
    private static readonly pb::MessageParser<QueryResultBytes> _parser = new pb::MessageParser<QueryResultBytes>(() => new QueryResultBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResultBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBytes(QueryResultBytes other) : this() {
      resultBytes_ = other.resultBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBytes Clone() {
      return new QueryResultBytes(this);
    }

    /// <summary>Field number for the "resultBytes" field.</summary>
    public const int ResultBytesFieldNumber = 1;
    private pb::ByteString resultBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ResultBytes {
      get { return resultBytes_; }
      set {
        resultBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResultBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResultBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultBytes != other.ResultBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultBytes.Length != 0) hash ^= ResultBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResultBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ResultBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResultBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResultBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResultBytes other) {
      if (other == null) {
        return;
      }
      if (other.ResultBytes.Length != 0) {
        ResultBytes = other.ResultBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResultBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryResponse is returned by the peer as a result of a GetStateByRange,
  /// GetQueryResult, and GetHistoryForKey. It holds a bunch of records in
  /// results field, a flag to denote whether more results need to be fetched from
  /// the peer in has_more field, transaction id in id field, and a QueryResponseMetadata
  /// in metadata field.
  /// </summary>
  public sealed partial class QueryResponse : pb::IMessage<QueryResponse> {
    private static readonly pb::MessageParser<QueryResponse> _parser = new pb::MessageParser<QueryResponse>(() => new QueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse(QueryResponse other) : this() {
      results_ = other.results_.Clone();
      hasMore_ = other.hasMore_;
      id_ = other.id_;
      metadata_ = other.metadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse Clone() {
      return new QueryResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Chaincode.NET.Protos.QueryResultBytes> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Chaincode.NET.Protos.QueryResultBytes.Parser);
    private readonly pbc::RepeatedField<global::Chaincode.NET.Protos.QueryResultBytes> results_ = new pbc::RepeatedField<global::Chaincode.NET.Protos.QueryResultBytes>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chaincode.NET.Protos.QueryResultBytes> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "has_more" field.</summary>
    public const int HasMoreFieldNumber = 2;
    private bool hasMore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMore {
      get { return hasMore_; }
      set {
        hasMore_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private pb::ByteString metadata_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (HasMore != other.HasMore) return false;
      if (Id != other.Id) return false;
      if (Metadata != other.Metadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasMore != false) hash ^= HasMore.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (HasMore != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasMore);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasMore != false) {
        size += 1 + 1;
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasMore != false) {
        HasMore = other.HasMore;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 16: {
            HasMore = input.ReadBool();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Metadata = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryResponseMetadata is the metadata of a QueryResponse. It contains a count
  /// which denotes the number of records fetched from the ledger and a bookmark.
  /// </summary>
  public sealed partial class QueryResponseMetadata : pb::IMessage<QueryResponseMetadata> {
    private static readonly pb::MessageParser<QueryResponseMetadata> _parser = new pb::MessageParser<QueryResponseMetadata>(() => new QueryResponseMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMetadata(QueryResponseMetadata other) : this() {
      fetchedRecordsCount_ = other.fetchedRecordsCount_;
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMetadata Clone() {
      return new QueryResponseMetadata(this);
    }

    /// <summary>Field number for the "fetched_records_count" field.</summary>
    public const int FetchedRecordsCountFieldNumber = 1;
    private int fetchedRecordsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FetchedRecordsCount {
      get { return fetchedRecordsCount_; }
      set {
        fetchedRecordsCount_ = value;
      }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private string bookmark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bookmark {
      get { return bookmark_; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FetchedRecordsCount != other.FetchedRecordsCount) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FetchedRecordsCount != 0) hash ^= FetchedRecordsCount.GetHashCode();
      if (Bookmark.Length != 0) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FetchedRecordsCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FetchedRecordsCount);
      }
      if (Bookmark.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FetchedRecordsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FetchedRecordsCount);
      }
      if (Bookmark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FetchedRecordsCount != 0) {
        FetchedRecordsCount = other.FetchedRecordsCount;
      }
      if (other.Bookmark.Length != 0) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FetchedRecordsCount = input.ReadInt32();
            break;
          }
          case 18: {
            Bookmark = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StateMetadata : pb::IMessage<StateMetadata> {
    private static readonly pb::MessageParser<StateMetadata> _parser = new pb::MessageParser<StateMetadata>(() => new StateMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadata(StateMetadata other) : this() {
      metakey_ = other.metakey_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadata Clone() {
      return new StateMetadata(this);
    }

    /// <summary>Field number for the "metakey" field.</summary>
    public const int MetakeyFieldNumber = 1;
    private string metakey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metakey {
      get { return metakey_; }
      set {
        metakey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Metakey != other.Metakey) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Metakey.Length != 0) hash ^= Metakey.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Metakey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Metakey);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Metakey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metakey);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Metakey.Length != 0) {
        Metakey = other.Metakey;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Metakey = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StateMetadataResult : pb::IMessage<StateMetadataResult> {
    private static readonly pb::MessageParser<StateMetadataResult> _parser = new pb::MessageParser<StateMetadataResult>(() => new StateMetadataResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateMetadataResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeShimReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadataResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadataResult(StateMetadataResult other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateMetadataResult Clone() {
      return new StateMetadataResult(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Chaincode.NET.Protos.StateMetadata> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Chaincode.NET.Protos.StateMetadata.Parser);
    private readonly pbc::RepeatedField<global::Chaincode.NET.Protos.StateMetadata> entries_ = new pbc::RepeatedField<global::Chaincode.NET.Protos.StateMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chaincode.NET.Protos.StateMetadata> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateMetadataResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateMetadataResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateMetadataResult other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
