// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: peer/chaincode.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chaincode.NET.Protos {

  /// <summary>Holder for reflection information generated from peer/chaincode.proto</summary>
  public static partial class ChaincodeReflection {

    #region Descriptor
    /// <summary>File descriptor for peer/chaincode.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChaincodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwZWVyL2NoYWluY29kZS5wcm90bxIGcHJvdG9zIjoKC0NoYWluY29kZUlE",
            "EgwKBHBhdGgYASABKAkSDAoEbmFtZRgCIAEoCRIPCgd2ZXJzaW9uGAMgASgJ",
            "IpABCg5DaGFpbmNvZGVJbnB1dBIMCgRhcmdzGAEgAygMEjwKC2RlY29yYXRp",
            "b25zGAIgAygLMicucHJvdG9zLkNoYWluY29kZUlucHV0LkRlY29yYXRpb25z",
            "RW50cnkaMgoQRGVjb3JhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAw6AjgBItwBCg1DaGFpbmNvZGVTcGVjEigKBHR5cGUYASABKA4y",
            "Gi5wcm90b3MuQ2hhaW5jb2RlU3BlYy5UeXBlEikKDGNoYWluY29kZV9pZBgC",
            "IAEoCzITLnByb3Rvcy5DaGFpbmNvZGVJRBIlCgVpbnB1dBgDIAEoCzIWLnBy",
            "b3Rvcy5DaGFpbmNvZGVJbnB1dBIPCgd0aW1lb3V0GAQgASgFIj4KBFR5cGUS",
            "DQoJVU5ERUZJTkVEEAASCgoGR09MQU5HEAESCAoETk9ERRACEgcKA0NBUhAD",
            "EggKBEpBVkEQBCLsAQoXQ2hhaW5jb2RlRGVwbG95bWVudFNwZWMSLQoOY2hh",
            "aW5jb2RlX3NwZWMYASABKAsyFS5wcm90b3MuQ2hhaW5jb2RlU3BlYxIUCgxj",
            "b2RlX3BhY2thZ2UYAyABKAwSRgoIZXhlY19lbnYYBCABKA4yNC5wcm90b3Mu",
            "Q2hhaW5jb2RlRGVwbG95bWVudFNwZWMuRXhlY3V0aW9uRW52aXJvbm1lbnQi",
            "LgoURXhlY3V0aW9uRW52aXJvbm1lbnQSCgoGRE9DS0VSEAASCgoGU1lTVEVN",
            "EAFKBAgCEANSDmVmZmVjdGl2ZV9kYXRlImEKF0NoYWluY29kZUludm9jYXRp",
            "b25TcGVjEi0KDmNoYWluY29kZV9zcGVjGAEgASgLMhUucHJvdG9zLkNoYWlu",
            "Y29kZVNwZWNKBAgCEANSEWlkX2dlbmVyYXRpb25fYWxnIigKDkxpZmVjeWNs",
            "ZUV2ZW50EhYKDmNoYWluY29kZV9uYW1lGAEgASgJKjQKFENvbmZpZGVudGlh",
            "bGl0eUxldmVsEgoKBlBVQkxJQxAAEhAKDENPTkZJREVOVElBTBABQmYKIm9y",
            "Zy5oeXBlcmxlZGdlci5mYWJyaWMucHJvdG9zLnBlZXJaKWdpdGh1Yi5jb20v",
            "aHlwZXJsZWRnZXIvZmFicmljL3Byb3Rvcy9wZWVyqgIUQ2hhaW5jb2RlLk5F",
            "VC5Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Chaincode.NET.Protos.ConfidentialityLevel), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeID), global::Chaincode.NET.Protos.ChaincodeID.Parser, new[]{ "Path", "Name", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeInput), global::Chaincode.NET.Protos.ChaincodeInput.Parser, new[]{ "Args", "Decorations" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeSpec), global::Chaincode.NET.Protos.ChaincodeSpec.Parser, new[]{ "Type", "ChaincodeId", "Input", "Timeout" }, null, new[]{ typeof(global::Chaincode.NET.Protos.ChaincodeSpec.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeDeploymentSpec), global::Chaincode.NET.Protos.ChaincodeDeploymentSpec.Parser, new[]{ "ChaincodeSpec", "CodePackage", "ExecEnv" }, null, new[]{ typeof(global::Chaincode.NET.Protos.ChaincodeDeploymentSpec.Types.ExecutionEnvironment) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.ChaincodeInvocationSpec), global::Chaincode.NET.Protos.ChaincodeInvocationSpec.Parser, new[]{ "ChaincodeSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chaincode.NET.Protos.LifecycleEvent), global::Chaincode.NET.Protos.LifecycleEvent.Parser, new[]{ "ChaincodeName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Confidentiality Levels
  /// </summary>
  public enum ConfidentialityLevel {
    [pbr::OriginalName("PUBLIC")] Public = 0,
    [pbr::OriginalName("CONFIDENTIAL")] Confidential = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///ChaincodeID contains the path as specified by the deploy transaction
  ///that created it as well as the hashCode that is generated by the
  ///system for the path. From the user level (ie, CLI, REST API and so on)
  ///deploy transaction is expected to provide the path and other requests
  ///are expected to provide the hashCode. The other value will be ignored.
  ///Internally, the structure could contain both values. For instance, the
  ///hashCode will be set when first generated using the path
  /// </summary>
  public sealed partial class ChaincodeID : pb::IMessage<ChaincodeID> {
    private static readonly pb::MessageParser<ChaincodeID> _parser = new pb::MessageParser<ChaincodeID>(() => new ChaincodeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeID(ChaincodeID other) : this() {
      path_ = other.path_;
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeID Clone() {
      return new ChaincodeID(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    ///deploy transaction will use the path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///all other requests will use the name (really a hashcode) generated by
    ///the deploy transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    ///user friendly version name for the chaincode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeID other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Carries the chaincode function and its arguments.
  /// UnmarshalJSON in transaction.go converts the string-based REST/JSON input to
  /// the []byte-based current ChaincodeInput structure.
  /// </summary>
  public sealed partial class ChaincodeInput : pb::IMessage<ChaincodeInput> {
    private static readonly pb::MessageParser<ChaincodeInput> _parser = new pb::MessageParser<ChaincodeInput>(() => new ChaincodeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInput(ChaincodeInput other) : this() {
      args_ = other.args_.Clone();
      decorations_ = other.decorations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInput Clone() {
      return new ChaincodeInput(this);
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_args_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> args_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "decorations" field.</summary>
    public const int DecorationsFieldNumber = 2;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_decorations_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBytes(18), 18);
    private readonly pbc::MapField<string, pb::ByteString> decorations_ = new pbc::MapField<string, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> Decorations {
      get { return decorations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!args_.Equals(other.args_)) return false;
      if (!Decorations.Equals(other.Decorations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= args_.GetHashCode();
      hash ^= Decorations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      args_.WriteTo(output, _repeated_args_codec);
      decorations_.WriteTo(output, _map_decorations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += args_.CalculateSize(_repeated_args_codec);
      size += decorations_.CalculateSize(_map_decorations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeInput other) {
      if (other == null) {
        return;
      }
      args_.Add(other.args_);
      decorations_.Add(other.decorations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 18: {
            decorations_.AddEntriesFrom(input, _map_decorations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Carries the chaincode specification. This is the actual metadata required for
  /// defining a chaincode.
  /// </summary>
  public sealed partial class ChaincodeSpec : pb::IMessage<ChaincodeSpec> {
    private static readonly pb::MessageParser<ChaincodeSpec> _parser = new pb::MessageParser<ChaincodeSpec>(() => new ChaincodeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeSpec(ChaincodeSpec other) : this() {
      type_ = other.type_;
      chaincodeId_ = other.chaincodeId_ != null ? other.chaincodeId_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      timeout_ = other.timeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeSpec Clone() {
      return new ChaincodeSpec(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chaincode.NET.Protos.ChaincodeSpec.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeSpec.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "chaincode_id" field.</summary>
    public const int ChaincodeIdFieldNumber = 2;
    private global::Chaincode.NET.Protos.ChaincodeID chaincodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeID ChaincodeId {
      get { return chaincodeId_; }
      set {
        chaincodeId_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    private global::Chaincode.NET.Protos.ChaincodeInput input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeInput Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    private int timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ChaincodeId, other.ChaincodeId)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (Timeout != other.Timeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (chaincodeId_ != null) hash ^= ChaincodeId.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (chaincodeId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ChaincodeId);
      }
      if (input_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      if (Timeout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Timeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (chaincodeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChaincodeId);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeSpec other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.chaincodeId_ != null) {
        if (chaincodeId_ == null) {
          ChaincodeId = new global::Chaincode.NET.Protos.ChaincodeID();
        }
        ChaincodeId.MergeFrom(other.ChaincodeId);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Chaincode.NET.Protos.ChaincodeInput();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Chaincode.NET.Protos.ChaincodeSpec.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (chaincodeId_ == null) {
              ChaincodeId = new global::Chaincode.NET.Protos.ChaincodeID();
            }
            input.ReadMessage(ChaincodeId);
            break;
          }
          case 26: {
            if (input_ == null) {
              Input = new global::Chaincode.NET.Protos.ChaincodeInput();
            }
            input.ReadMessage(Input);
            break;
          }
          case 32: {
            Timeout = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChaincodeSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("GOLANG")] Golang = 1,
        [pbr::OriginalName("NODE")] Node = 2,
        [pbr::OriginalName("CAR")] Car = 3,
        [pbr::OriginalName("JAVA")] Java = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specify the deployment of a chaincode.
  /// TODO: Define `codePackage`.
  /// </summary>
  public sealed partial class ChaincodeDeploymentSpec : pb::IMessage<ChaincodeDeploymentSpec> {
    private static readonly pb::MessageParser<ChaincodeDeploymentSpec> _parser = new pb::MessageParser<ChaincodeDeploymentSpec>(() => new ChaincodeDeploymentSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeDeploymentSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeDeploymentSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeDeploymentSpec(ChaincodeDeploymentSpec other) : this() {
      chaincodeSpec_ = other.chaincodeSpec_ != null ? other.chaincodeSpec_.Clone() : null;
      codePackage_ = other.codePackage_;
      execEnv_ = other.execEnv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeDeploymentSpec Clone() {
      return new ChaincodeDeploymentSpec(this);
    }

    /// <summary>Field number for the "chaincode_spec" field.</summary>
    public const int ChaincodeSpecFieldNumber = 1;
    private global::Chaincode.NET.Protos.ChaincodeSpec chaincodeSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeSpec ChaincodeSpec {
      get { return chaincodeSpec_; }
      set {
        chaincodeSpec_ = value;
      }
    }

    /// <summary>Field number for the "code_package" field.</summary>
    public const int CodePackageFieldNumber = 3;
    private pb::ByteString codePackage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CodePackage {
      get { return codePackage_; }
      set {
        codePackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exec_env" field.</summary>
    public const int ExecEnvFieldNumber = 4;
    private global::Chaincode.NET.Protos.ChaincodeDeploymentSpec.Types.ExecutionEnvironment execEnv_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeDeploymentSpec.Types.ExecutionEnvironment ExecEnv {
      get { return execEnv_; }
      set {
        execEnv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeDeploymentSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeDeploymentSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChaincodeSpec, other.ChaincodeSpec)) return false;
      if (CodePackage != other.CodePackage) return false;
      if (ExecEnv != other.ExecEnv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chaincodeSpec_ != null) hash ^= ChaincodeSpec.GetHashCode();
      if (CodePackage.Length != 0) hash ^= CodePackage.GetHashCode();
      if (ExecEnv != 0) hash ^= ExecEnv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chaincodeSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChaincodeSpec);
      }
      if (CodePackage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(CodePackage);
      }
      if (ExecEnv != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ExecEnv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chaincodeSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChaincodeSpec);
      }
      if (CodePackage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CodePackage);
      }
      if (ExecEnv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExecEnv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeDeploymentSpec other) {
      if (other == null) {
        return;
      }
      if (other.chaincodeSpec_ != null) {
        if (chaincodeSpec_ == null) {
          ChaincodeSpec = new global::Chaincode.NET.Protos.ChaincodeSpec();
        }
        ChaincodeSpec.MergeFrom(other.ChaincodeSpec);
      }
      if (other.CodePackage.Length != 0) {
        CodePackage = other.CodePackage;
      }
      if (other.ExecEnv != 0) {
        ExecEnv = other.ExecEnv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chaincodeSpec_ == null) {
              ChaincodeSpec = new global::Chaincode.NET.Protos.ChaincodeSpec();
            }
            input.ReadMessage(ChaincodeSpec);
            break;
          }
          case 26: {
            CodePackage = input.ReadBytes();
            break;
          }
          case 32: {
            ExecEnv = (global::Chaincode.NET.Protos.ChaincodeDeploymentSpec.Types.ExecutionEnvironment) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChaincodeDeploymentSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ExecutionEnvironment {
        [pbr::OriginalName("DOCKER")] Docker = 0,
        [pbr::OriginalName("SYSTEM")] System = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Carries the chaincode function and its arguments.
  /// </summary>
  public sealed partial class ChaincodeInvocationSpec : pb::IMessage<ChaincodeInvocationSpec> {
    private static readonly pb::MessageParser<ChaincodeInvocationSpec> _parser = new pb::MessageParser<ChaincodeInvocationSpec>(() => new ChaincodeInvocationSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeInvocationSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInvocationSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInvocationSpec(ChaincodeInvocationSpec other) : this() {
      chaincodeSpec_ = other.chaincodeSpec_ != null ? other.chaincodeSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInvocationSpec Clone() {
      return new ChaincodeInvocationSpec(this);
    }

    /// <summary>Field number for the "chaincode_spec" field.</summary>
    public const int ChaincodeSpecFieldNumber = 1;
    private global::Chaincode.NET.Protos.ChaincodeSpec chaincodeSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chaincode.NET.Protos.ChaincodeSpec ChaincodeSpec {
      get { return chaincodeSpec_; }
      set {
        chaincodeSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeInvocationSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeInvocationSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChaincodeSpec, other.ChaincodeSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chaincodeSpec_ != null) hash ^= ChaincodeSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chaincodeSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChaincodeSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chaincodeSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChaincodeSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeInvocationSpec other) {
      if (other == null) {
        return;
      }
      if (other.chaincodeSpec_ != null) {
        if (chaincodeSpec_ == null) {
          ChaincodeSpec = new global::Chaincode.NET.Protos.ChaincodeSpec();
        }
        ChaincodeSpec.MergeFrom(other.ChaincodeSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chaincodeSpec_ == null) {
              ChaincodeSpec = new global::Chaincode.NET.Protos.ChaincodeSpec();
            }
            input.ReadMessage(ChaincodeSpec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// LifecycleEvent is used as the payload of the chaincode event emitted by LSCC
  /// </summary>
  public sealed partial class LifecycleEvent : pb::IMessage<LifecycleEvent> {
    private static readonly pb::MessageParser<LifecycleEvent> _parser = new pb::MessageParser<LifecycleEvent>(() => new LifecycleEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LifecycleEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chaincode.NET.Protos.ChaincodeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleEvent(LifecycleEvent other) : this() {
      chaincodeName_ = other.chaincodeName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleEvent Clone() {
      return new LifecycleEvent(this);
    }

    /// <summary>Field number for the "chaincode_name" field.</summary>
    public const int ChaincodeNameFieldNumber = 1;
    private string chaincodeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChaincodeName {
      get { return chaincodeName_; }
      set {
        chaincodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LifecycleEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LifecycleEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChaincodeName != other.ChaincodeName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChaincodeName.Length != 0) hash ^= ChaincodeName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChaincodeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChaincodeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChaincodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChaincodeName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LifecycleEvent other) {
      if (other == null) {
        return;
      }
      if (other.ChaincodeName.Length != 0) {
        ChaincodeName = other.ChaincodeName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChaincodeName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
